// <auto-generated />
using System;
using Difficulty_Learning.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Difficulty_Learning.Migrations
{
    [DbContext(typeof(Difficulty_LearningDbContext))]
    [Migration("20230105103612_createdb")]
    partial class createdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Difficulty_Learning.Models.Category_Course", b =>
                {
                    b.Property<int>("CategoryCourse_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryCourse_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryCourse_ID");

                    b.ToTable("Category_Courses");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.Course", b =>
                {
                    b.Property<int>("Course_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Course_CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Course_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Course_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Course_UserID")
                        .HasColumnType("int");

                    b.HasKey("Course_ID");

                    b.HasIndex("Course_UserID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.User", b =>
                {
                    b.Property<int>("Users_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Course_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("User_CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_FullName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("User_Mail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User_Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Users_Active")
                        .HasColumnType("bit");

                    b.Property<int>("Users_TypeID")
                        .HasColumnType("int");

                    b.Property<string>("Users_UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Users_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.User_Type", b =>
                {
                    b.Property<int>("UserType_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserType_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserType_ID");

                    b.ToTable("User_Types");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.Watched_History", b =>
                {
                    b.Property<int>("WatchedHistory_CourseID")
                        .HasColumnType("int");

                    b.Property<int>("WatchedHistory_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("WatchedHistory_Timeing")
                        .HasColumnType("datetime2");

                    b.Property<int>("WatchedHistory_UserID")
                        .HasColumnType("int");

                    b.ToTable("Watched_Historys");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.Course", b =>
                {
                    b.HasOne("Difficulty_Learning.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Course_UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.User", b =>
                {
                    b.HasOne("Difficulty_Learning.Models.Course", null)
                        .WithMany("Userslist")
                        .HasForeignKey("Course_ID");
                });

            modelBuilder.Entity("Difficulty_Learning.Models.Course", b =>
                {
                    b.Navigation("Userslist");
                });
#pragma warning restore 612, 618
        }
    }
}
